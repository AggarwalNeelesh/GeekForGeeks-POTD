Problem Statement :
Given a square matrix a of size n x n, where each cell can be either 'X' or 'O', you need to find the size of the 
largest square subgrid that is completely surrounded by 'X'. More formally you need to find the largest square within the grid where all its border cells are 'X'.

Solution Code :

class Solution {
    int largestSubsquare(int n, char a[][]) {
        // code here
        int max = 0;
        int arr[][][] = new int[n][n][2]; //Left-Up
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++){
                if(a[i][j]=='O')continue;
                arr[i][j][0] = 1;
                arr[i][j][1] = 1;
                if(j-1>=0)arr[i][j][0] += arr[i][j-1][0];
                if(i-1>=0)arr[i][j][1] += arr[i-1][j][1];
                
                int min = Math.min(arr[i][j][0], arr[i][j][1]);
                for(int x=min;x>=1;x--){
                    int ni = i - (x-1), nj = j - (x-1);
                    
                    if(arr[ni][j][0]>=x && arr[i][nj][1]>=x && x>max){
                        max = x;
                        break;
                    }
                }
            }
        return max;
    }
};
