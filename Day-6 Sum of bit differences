Problem Statement :
Given an array integers arr[], containing n elements, find the sum of bit differences between all pairs of element in the array. 
Bit difference of a pair (x, y) is the count of different bits at the same positions in binary representations of x and y.
For example, bit difference for 2 and 7 is 2. Binary representation of 2 is 010 and 7 is 111 respectively and the first and last bits differ between the two numbers.

Note: (x, y) and (y, x) are considered two separate pairs.

Solution Code :
class Solution {
    long sumBitDifferences(int[] arr, int n) {
        // code here
        long countOnes[] = new long[32];
        
        for(int x: arr){
            int i = 0;
            while(x>0){
                if((x&1) == 1)
                    countOnes[i]++;
                x = x>>1;
                i++;
            }
        }
        long ans = 0;
        for(int i=0;i<32;i++){
            ans += countOnes[i] * (n - countOnes[i]);
        }
        return ans*2;
    }
}
